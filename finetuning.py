import os
import openai
import json

# 예시 데이터셋
dataset = {
    "train": [
        {
    "question":"폭언으로 직장 내 괴롭힘을 당하고 있는데 관련된 판례 알려줘",
    "answer": "사건번호 : 22가단241657\n\n[민사] 직장 상사의 폭언 등을 '직장 내 괴롭힘'으로 인정하여 정신적 손해배상책임을 인정한 사례\n\n같은 회사에서 근무하던 직장 상사의 폭언과 욕설 행위 등이 원고의 인격권을 침해하는 불법행위에 해당한다고 판단하여 위자료 700만 원을 인정(위 불법행위와 치료비 및 일실수입 사이의 인과관계는 부정). 다만 일부 행위(다른 직원을 불러 갈등을 이야기하거나 핀잔을 준 행위 등)에 대해서는 불리한 처우 또는 적정한 수준을 넘는 행위로 판단하지 아니함"
    },
    {
    "question":"물놀이기구에서 다쳤는데 운영자에게 손해배상을 청구할 수 있어?",
    "answer": "관련된 판례가 있습니다. \n\n 사건번호 : 21가단269573 \n\n[민사] 물놀이기구 이용 중 발생한 사고에 대하여 운영자의 일부 손해배상책임 인정 사례\n원고가 초여름 수상레저사업장의 물놀이기구를 이용하다가 골절 등 상해를 입은 사안에서, 운영자인 피고가 안전요원이나 진행요원을 배치해 이용객이 올바른 자세를 취하도록 안내해야 할 의무가 있음에도 이를 소홀히 했다고 보아 손해배상책임을 인정(다만 안내문 부착, 이전에 놀이기구를 사용하였던 원고의 경험과 나이 등 고려하여 피고의 책임을 10%로 제한) "
    },
    {
    "question":"고의로 운전하지 않았는데 사고가 난 상황인데 운전한 것으로 간주 돼?",
    "answer": "관련된 판례가 있습니다. \n\n 사건번호 : 23고정1159 \n\n[형사] 실수로 자동차를 움직이게 한 경우 운전에 해당하지 않는다 판단한 사례\n술에 취한 채 차량에 탑승하여 잠을 자다 후진으로 다른 차량을 충돌하는 사고를 일으킨 점에 대하여,차량이 후진하기 전 브레이크등이 점등된 시간이 2시간 20분이 넘는 사실과 사고 당시 피고인의 코고는 소리 및 피해자와 경찰이 현장에 오기까지 계속 잠을 자던 피고인의 모습 등을 종합하여 위 차량 이동이 피고인의 고의 운전행위로 인한 것이라고 보기 어렵다고 보아 교특법위반 및  음주운전 공소사실에 무죄를 선고한 사안  "
    },
    {
    "question":"중고물품 사기를 당했는데 관련 사건있어?",
    "answer": "[형사] 중고물품 사기로 다수의 피해자로부터 총 980만 원을 편취하고 지인 계정을 도용해 중고거래 사이트에 허위 판매글을 게시한 피고인에게 징역 2년 선고 (부산지방법원 2023고단3201)"
    },
    {
    "question":"음주 운전으로 사람을 다치게 했어. 비슷한 판례 알려줘",
    "answer": "[형사] 음주, 무면허, 무보험으로 오토바이를 운전하다 횡단보도 보행자 2명을 들이받고, 술에 취해 정차된 차량 창문을 손괴한 피고인에게 징역 1년 6월 선고"
    },
    {
    "question":"보이스피싱을 당해서 친구 계좌를 알려줘버렸는데 처벌당해?",
    "answer": "네. 처벌 당한 사례가 있습니다. 전화금융사기 조직원으로부터 부탁을 받고, 범죄로 취득된 돈일 수 있다는 점을 알면서 지인의 계좌를 제공하여 보이스피싱 사기 피해자로부터 편취금을 입금받는 범행에 이용하게 한 사건. 위 사건에 대한 피고인의 범의(계좌정보를 조직원에게 제공한 것이 범죄행위와 관련된 것이라는 점을 알고 있었다는 사정)가 인정된다고 보아, 피고인이 중국 국적의 외국인으로서 위 범행과 절도 등 범행의 횟수가 10회에 이르고, 법원의 출석통지에도 불응하면서 잠적하였다가 불법체류자로서 적벌된 점 등을 비롯한 여러 제반사정 참작하여 징역 10월의 실형을 선고한 사례"
    },
    {
    "question":"돈을 안갚는다고 감금당하고 폭행당했어. 관련 판례알려줘",
    "answer": "사건번호 2020고단 3920\n\n [형사] 돈을 갚지 않는다는 이유로 10대를 마구 폭행하고 모텔에 감금한 피고인들에게 실형과 벌금형을 선고한 사례"
    },
    {
	"question":"어떤 사람이 내 웹소설을 따라서 표절해서 쓴 것 같은데 손해배상 관련된 판례가 있을까?",
	"answer": "사건번호 - 서울중앙지방법원 2019가합588425\n\n\n사안의 개요\n\n\n\n- 웹소설 E의 작가인 원고가 피고를 상대로 위 웹소설을 표절하여 창작한 웹소설 I를 연재하였다는 이유로 저작권 침해를 원인으로 한 손해배상을 청구한 사안\n\n\n판결요지\n\n\n1. 웹소설 간에 인물·배경·사건·장면이 유사한 부분이 발견된다 하더라도 그것이 아이디어 부분이라고 할 수 있는 모티프 등을 다루는 데 있어 전형적으로 수반되는 소재에 불과하다면 포괄적·비문언적 유사성을 인정하기 어려움\n2. 소설 간 포괄적·비문언적 유사성을 판단할 때에는 이야기의 흐름·구조 및 이를 통해 작가가 전달하고자 하는 주제의식, 인물·배경·사건·장면의 배열 및 상호 작용을 통하여 작가가 의도한 작품의 서사 및 분위기, 각각의 인물·배경·사건·장면이 전체 줄거리에서 수행하는 역할이나 기능 등을 모두 살펴 판단하여야 함\n3. 두 웹소설 간에 공통된 인물·배경·사건·장면이 다수 등장하고, 게임물·인방물(BJ물)·이세계물등 다수의 모티프를 차용하여 서사를 전개하는 과정에서 그 소재의 역할이나 기능 등이 일부 동일하게 작용하는 사실은 인정할 수 있음. 그러나 두 웹소설 간에 각 사건이 전개되는 방식이나 전반적인 연출 등 표현형식, 각 인물과 사건 등이 작품 전체의 줄거리 내에서 수행하는 역할, 이야기의 전반적인 구조 및 흐름 등을 통해 파악할 수 있는 각 웹소설의 근본적인 본질 내지 구조가 동일·유사하다고 볼 수 없어, 포괄적·비문언적 유사성을 인정할 수 없음"
    },
    {
	"question":"상표권 침해 관련된 판례 알려줘",
	"answer": "사건번호 - 서울중앙지방법원 2022가합547585\n\n\n판결요지\n\n\n- 피고가 영어 교습소를 운영하면서 인터넷 사이트에 교습소의 상호와 관련된 여러 표장들을 표시한 행위가 원고의 등록상표권을 침해하여 손해배상책임을 부담하는지 여부가 문제된 사안\n- 피고가 표시한 여러 표장들 중 일부는 상호사용으로서 상표권 효력이 미치지 않거나 등록상표의 표장과 유사하지 않다는 이유로 상표권 침해가 되지 않고, 일부는 상표권 침해에는 해당하나 피고가 등록상표의 존재를 알지 못하였다는 점을 정당화할 수 있는 사정이 있다는 이유로     원고의 청구를 기각함"
    },
    {
	"question":"의류건조기를 사기당한 것 같은데 손해배상 청구할 수 있어?",
	"answer": "이와 관련된 판례가 있습니다. \n서울남부지방법원 2020가합101417\n\n\n[민사] 의류건조기 거짓·과장로 인한 손해배상 청구를 인정한 사례\n\n\n피고가 의류건조기에 관하여 “건조시마다 세척”, “깨끗하게 완벽 유지” 등 광고를 하였으나, 이와 달리 이 사건 의류건조기의 콘덴서 자동세척 기능만으로 콘덴서가 청결하게 유지되지 아니하였다는 점에서 거짓·과장된 광고로 판단하고, 이 사건 의류건조기를 구매한 원고들에게 위 광고를 통하여 형성하게 된 신뢰와 기대를 침해당하여 입은 정신적 손해에 대하여 피고가 지급하여야 할 위자료를 의류건조기 1대당 20만 원으로 결정한 사례(다만 위 광고로 원고들에게 재산상 손해가 발생하였다고 보기는 어렵다고 보았음)"
    }
    ]
}

# 학습 데이터 jsonl 형태로 생성 및 저장
list_message = []
num_data = len(dataset["train"])

for i in range(num_data):
    question = dataset["train"][i]["question"]
    answer = dataset["train"][i]["answer"]
    print("질문: ",question)
    print("답변",answer)
    message = [
        {"role": "user", "content": question},
        {"role": "assistant", "content": answer},
    ]
    list_message.append(message)

with open("output1.jsonl", "w") as file:
    for messages in list_message:
        json_line = json.dumps({"messages": messages})
        file.write(json_line + '\n')
        

# jsonl파일 업로드
from openai import OpenAI
client = OpenAI(
    api_key = "{Your OpenAI API key}"
)

upload_file = client.files.create(
  file=open("./path/output1.jsonl", "rb"),
  purpose="fine-tune"
)

# 모델 학습
# upload_file을 print하면 나오는 id를 training_file에 입력
start_train = client.fine_tuning.jobs.create(
  training_file='upload_file의 ID부분 입력', 
  model="gpt-3.5-turbo-1106"
)
